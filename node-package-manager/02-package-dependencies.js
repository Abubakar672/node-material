// lets install mongoose package in our application.
// after installed it i saw that a lot of packages have been installed. that  packages are actually the dependencies of mongoose. 
// in present npm version all dependencies are installed inside the single node_modules folder. in previous versions all dependencies were installed inside node_modules folder which were present in every saperate folder. the big flop of this was that if different packages have same dependencies that already installed dependencies become the dependencies of newly installed package with the specific root path. some times this root became vey long. in windows specific length of root in a limitation. there fore now all dependencies are installed inside the one node_module folder.
// here is an other problem let i have a package xyz with version 1. let our application supports version 1. and another package let ABC has the dependency of xyz but with version 2. than what will be the solution? 
// the solution is that if our app needs the version 1 of xyz package than this xyz package will be installed inside the main node_modules folder. and ABC package will have its own node_modules folder. inside thi folder xyz version 1 package will be installed/ 